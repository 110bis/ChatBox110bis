name: TestApp & Deploy

on:
  push:
    branches:
      - master
      - main
      - dev
      - ver_2.0.0

jobs:

## CREATE ENV ##

  CreateEnvFile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/Checkout@v2
      - name: Create .env file
        run: |
          touch .env
          echo TYPE=${{ secrets.TYPE }} | base64 >> .env
          echo PROJECT_ID=${{ secrets.PROJECT_ID }} | base64 >> .env
          echo PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }} | base64 >> .env
          echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} | base64 >> .env
          echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} | base64 >> .env
          echo CLIENT_ID=${{ secrets.CLIENT_ID }} | base64 >> .env
          echo AUTH_URI=${{ secrets.AUTH_URI }} | base64 >> .env
          echo TOKEN_URI=${{ secrets.TOKEN_URI }} | base64 >> .env
          echo AUTH_PROVIDER_X509_CERT_URL=${{ secrets.AUTH_PROVIDER_X509_CERT_URL }} | base64 >> .env
          echo CLIENT_X509_CERT_URL=${{ secrets.CLIENT_X509_CERT_URL }} | base64 >> .env
          echo SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }} | base64 >> .env
          echo TITLE_FAQ=${{ secrets.TITLE_FAQ }} | base64 >> .env | base64 -d > .env

## TEST APP ##

  AppTest:
    needs:
      - CreateEnvFile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/Checkout@v2

      - name: Install and set flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.5'

      - name: Upgrade flutter
        run: flutter upgrade

      - name: Check flutter
        run: flutter doctor

      - name: Create .env file
        run: |
          touch .env
          echo TYPE=${{ secrets.TYPE }} | base64 >> .env
          echo PROJECT_ID=${{ secrets.PROJECT_ID }} | base64 >> .env
          echo PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }} | base64 >> .env
          echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} | base64 >> .env
          echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} | base64 >> .env
          echo CLIENT_ID=${{ secrets.CLIENT_ID }} | base64 >> .env
          echo AUTH_URI=${{ secrets.AUTH_URI }} | base64 >> .env
          echo TOKEN_URI=${{ secrets.TOKEN_URI }} | base64 >> .env
          echo AUTH_PROVIDER_X509_CERT_URL=${{ secrets.AUTH_PROVIDER_X509_CERT_URL }} | base64 >> .env
          echo CLIENT_X509_CERT_URL=${{ secrets.CLIENT_X509_CERT_URL }} | base64 >> .env
          echo SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }} | base64 >> .env
          echo TITLE_FAQ=${{ secrets.TITLE_FAQ }} | base64 >> .env

      - name: Install dependencies
        run: flutter pub get

      - name: Check norme
        run: flutter format --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze

      - name: Test Build
        run: flutter build apk --debug

## DOCKER ##

  DockerTest:
    needs:
      - AppTest
    runs-on: ubuntu-latest

    steps:

      - uses: actions/Checkout@v2

      - name: Create .env file
        run: |
          touch .env
          echo TYPE=${{ secrets.TYPE }} | base64 >> .env
          echo PROJECT_ID=${{ secrets.PROJECT_ID }} | base64 >> .env
          echo PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }} | base64 >> .env
          echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} | base64 >> .env
          echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} | base64 >> .env
          echo CLIENT_ID=${{ secrets.CLIENT_ID }} | base64 >> .env
          echo AUTH_URI=${{ secrets.AUTH_URI }} | base64 >> .env
          echo TOKEN_URI=${{ secrets.TOKEN_URI }} | base64 >> .env
          echo AUTH_PROVIDER_X509_CERT_URL=${{ secrets.AUTH_PROVIDER_X509_CERT_URL }} | base64 >> .env
          echo CLIENT_X509_CERT_URL=${{ secrets.CLIENT_X509_CERT_URL }} | base64 >> .env
          echo SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }} | base64 >> .env
          echo TITLE_FAQ=${{ secrets.TITLE_FAQ }} | base64 >> .env

      - name: Compile app
        shell: bash
        run: docker build ./

## DEPLOYEMENT ##

  Deployement:
    needs:
      - CreateEnvFile
      - AppTest
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - uses: actions/Checkout@v2

      - name: Commit files
        run: |
          git config --local user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@github.com"
          git commit -m "Deployment"

      - name: Push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: deploy
          force: true

      - name: Deployement
        run: |
          echo "Push successfuly"
          echo "Deployement is starting"
